/*
Copyright 2021 The PlanetPulse Authors.

Planet Pulse is an API designed to serve climate data pulled from NOAA's
Global Monitoring Laboratory FTP server. This API is based on the
OpenAPI v3 specification.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

A copy of the GNU General Public License can be found here:
https://www.gnu.org/licenses/

Contact: planetpulse.api@gmail.com
*/

package models

import "database/sql"

// DataObject represents any struct/type which will hold data returned from a
// database query.
type DataObject interface {
	// Load reads data from a database query and loads it into the struct/type
	// that implements this method. Rows is an *sql.Rows type used to run
	// rows.Scan() to read in the specified columns. Simple is a boolean that
	// allows the handler to request a simplified version of the data.
	// The simplified version is usually created by only loading a specific
	// subset of the original columns.
	Load(rows *sql.Rows, simple bool) error
}

type ServerResp struct {
	Results []interface{} `json:",omitempty"`

	Status string

	RequestId string

	// Error holds an ErrorResp object. Should this be nil,
	// it will not be included in the response.
	Error *ErrorResp `json:",omitempty"`
}

// ErrorResp represents error context returned from the server.
type ErrorResp struct {
	// Description describes the error. Typically the code with a message, eg. '400 - Bad Request'
	Description string

	// Message is usually the error message generated by a helper function and tossed up the
	// call chain to the response handler.
	Message string
}
